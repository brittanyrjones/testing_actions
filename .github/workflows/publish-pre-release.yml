name: Publish Pre-Release

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - main
    tags:
      - 'beta-v*'
      - 'v*beta'
      - 'v*.*beta*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 
        uses: actions/setup-python@v3
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install the project
        run: uv sync --all-extras --dev
      - name: Run Tests
        run: uv run pytest --cov=hello_world --cov-report=term-missing --cov-fail-under=80
      - name: Build the artifact in dist/
        run: uv build

      # Get version from tag or branch
      - name: Get version
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # For tags, remove 'v' prefix
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            # For main branch, get the latest beta tag
            VERSION=$(git describe --tags --match "v*beta*" --abbrev=0 | sed 's/^v//')
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      # Only publish and create release if this is a tag push
      - name: Publish to TestPyPI
        if: startsWith(github.ref, 'refs/tags/')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          twine upload --repository-url https://test.pypi.org/legacy/ dist/*

      # Create GitHub Release
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          name: "Beta Release v${{ steps.get_version.outputs.VERSION }}"
          body_path: CHANGELOG.md
          draft: true
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

   