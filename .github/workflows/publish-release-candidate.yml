name: Publish Release Candidate

# Trigger on tag push that matches RC pattern
on:
  push:
    tags:
      - 'v*rc*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # Checkout code with full history for tag creation
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # Install build dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      # Extract version from tag
      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      # Build package for PyPI
      - name: Build package
        run: python -m build

      # Publish to PyPI
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload dist/*

      # Create GitHub Release
      # Note: RCs get GitHub releases marked as pre-release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Release Candidate v${{ steps.get_version.outputs.VERSION }}"
          body_path: CHANGELOG.md
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
