name: Publish Release

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 
        uses: actions/setup-python@v3
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install the project
        run: uv sync --all-extras --dev
      - name: Run Tests
        run: uv run pytest --cov=hello_world --cov-report=term-missing --cov-fail-under=80
      - name: Build the artifact in dist/
        run: uv build

      # Get version from tag
      - name: Get version
        id: get_version
        run: |
          # Remove 'v' prefix and get the version
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      # Publish to PyPI
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*

      # Create GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Release v${{ steps.get_version.outputs.VERSION }}"
          body_path: CHANGELOG.md
          draft: true
          prerelease: ${{ startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '.beta') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
