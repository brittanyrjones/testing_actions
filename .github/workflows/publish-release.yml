name: Publish Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - '!v*beta*'
      - '!beta-v*'
      - '!v*.*beta*'

permissions:
  contents: write
  packages: write
  id-token: write  # Required for PyPI publishing

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: testpypi  # Optional: if you have environment secrets
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 
        uses: actions/setup-python@v3
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Install the project
        run: uv sync --all-extras --dev
      - name: Run Tests
        run: uv run pytest --cov=hello_world --cov-report=term-missing --cov-fail-under=80
      - name: Build the artifact in dist/
        run: uv build

      # Get version from tag
      - name: Get version
        id: get_version
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            # Extract version from tag
            TAG=${GITHUB_REF#refs/tags/}
            # Remove 'v' prefix
            VERSION=${TAG#v}
          else
            # For main branch, just use a placeholder version for validation
            VERSION="0.0.0"
          fi
          echo "version=$VERSION" >> $GITHUB_ENV

      # Only publish and create release if this is a tag push
      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://pypi.org/
  

      # Create GitHub Release
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          name: "Release ${{ github.ref_name }}"
          body_path: CHANGELOG.md
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
