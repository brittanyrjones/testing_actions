name: Upload Python Package to Test PyPI

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: 
      name: testpypi
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Download release assets
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: tag-and-release-prerelease.yml
          name: dist
          path: dist

       # Check if version exists on TestPyPI
      - name: Check TestPyPI for existing version
        id: check_testpypi
        run: |
          # Get the normalized version (convert -beta to b0)
          PYPI_VERSION=$(echo "${{ github.event.release.tag_name }}" | sed 's/-beta/b0/')
          PACKAGE_NAME="bjones_testing_actions"
          echo "Checking for version: $PYPI_VERSION"
          
          # Check if version exists
          if curl -s "https://test.pypi.org/pypi/$PACKAGE_NAME/$PYPI_VERSION/json" | grep -q '"version":"'; then
            echo "Version $PYPI_VERSION already exists on TestPyPI"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Version $PYPI_VERSION does not exist on TestPyPI"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi



      - name: Publish package to Test PyPI
        if: steps.check_testpypi.outputs.exists != 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true

        
